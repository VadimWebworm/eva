version: '3.8'

services:
  web:
    build:
      context: ./app
      dockerfile: Dockerfile.prod
    command: gunicorn eva.wsgi:application --bind 0.0.0.0:8000
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
    expose:
      - 8000
    env_file:
      - ./.env.staging
    depends_on:
      - asr
      - ts
      - db

  asr:
    build: ./service_asr
    ports:
      - "5005:5005"
  ts:
    build: ./service_text_similarity
    ports:
      - "5000:5000"
  db:
    image: postgres:13.0-alpine
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
    env_file:
      - ./.env.staging.db

  celery:
    build: ./app
    command: celery -A eva worker --loglevel=info
    volumes:
      - ./app:/usr/src/app
      - media_volume:/usr/src/app/mediafiles
    env_file:
      - ./.env.prod.celery
    depends_on:
      - web
      - redis

  redis:
    image: redis:5-alpine

  nginx-proxy:
    container_name: nginx-proxy
    build: nginx
    restart: always
    ports:
      - 443:443
      - 80:80
    volumes:
      - static_volume:/home/app/web/staticfiles
      - media_volume:/home/app/web/mediafiles
      - certs:/etc/nginx/certs
      - html:/usr/share/nginx/html
      - vhost:/etc/nginx/vhost.d
      - /var/run/docker.sock:/tmp/docker.sock:ro
    depends_on:
      - web
  nginx-proxy-letsencrypt:
      image: jrcs/letsencrypt-nginx-proxy-companion
      env_file:
        - ./.env.staging.proxy-companion
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock:ro
        - certs:/etc/nginx/certs
        - html:/usr/share/nginx/html
        - vhost:/etc/nginx/vhost.d
        - acme:/etc/acme.sh
      depends_on:
        - nginx-proxy


volumes:
  static_volume:
  media_volume:
  postgres_data:
  certs:
  html:
  vhost:
  acme: